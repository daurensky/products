version: '3.9'
services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: products-app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./config/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app-network

    webserver:
        image: nginx:alpine
        container_name: products-webserver
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./:/var/www
            - ./config/nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - app-network

    db:
        image: mysql:5.7.22
        container_name: products-db
        restart: unless-stopped
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: "${DB_DATABASE}"
            MYSQL_USER: "${DB_USERNAME}"
            MYSQL_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
        volumes:
            - dbdata:/var/lib/mysql
            - ./config/mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - app-network

    queue:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: products-queue
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./config/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app-network
        environment:
            CONTAINER_ROLE: "queue"
        command: /usr/local/bin/start

    scheduler:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: products-scheduler
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./config/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app-network
        environment:
            CONTAINER_ROLE: "scheduler"
        command: /usr/local/bin/start

volumes:
    dbdata:
        driver: local

networks:
    app-network:
        driver: bridge
